name: Publish Docker Image

on:
  workflow_run:
    workflows: ["Create GitHub Release"]
    types:
      - completed
  release:
    types: [created]

env:
  DotnetVersion: '8.0.x' # Update this to the version you're using
  ProjectName: 'Spine.xx' # Update this to your actual project name

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Version Artifact
        uses: actions/download-artifact@v4
        with:
          name: version-artifact
          path: ${{ env.WorkingDirectory }}

      - name: Read Version from File and Determine Tag
        id: version
        run: |
          VERSION=$(cat ${{ env.WorkingDirectory }}/version.txt)
          if [[ "$VERSION" == *"-beta"* ]]; then
            DOCKER_TAG="beta"
          elif [[ "$VERSION" == *"-rc"* ]]; then
            DOCKER_TAG="experimental"
          else
            DOCKER_TAG="latest"
          fi
          echo "::set-output name=DOCKER_TAG::$DOCKER_TAG"
          echo "::set-output name=VERSION::$VERSION"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ProjectName }}
          path: app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ env.ProjectName }}:${{ steps.version.outputs.DOCKER_TAG }}